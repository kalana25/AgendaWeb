// <auto-generated />
using AgendaWeb.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AgendaWeb.DAL.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20190915164345_add-collaborator")]
    partial class addcollaborator
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AgendaWeb.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasMaxLength(100);

                    b.Property<string>("No")
                        .HasMaxLength(50);

                    b.Property<string>("State")
                        .HasMaxLength(100);

                    b.Property<string>("Street")
                        .HasMaxLength(100);

                    b.Property<string>("ZipCode")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("AgendaWeb.Models.Collaborator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId");

                    b.Property<int>("CommunicationId");

                    b.Property<string>("FristName")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .HasMaxLength(100);

                    b.Property<string>("NIC")
                        .HasMaxLength(12);

                    b.Property<string>("OtherNames")
                        .HasMaxLength(250);

                    b.Property<string>("RegistrationNo");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("CommunicationId");

                    b.ToTable("Collaborators");
                });

            modelBuilder.Entity("AgendaWeb.Models.Communication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasMaxLength(250);

                    b.Property<int>("Medium");

                    b.Property<string>("Value")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Communications");
                });

            modelBuilder.Entity("AgendaWeb.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId");

                    b.Property<int>("CommunicationId");

                    b.Property<string>("FristName")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .HasMaxLength(100);

                    b.Property<string>("NIC")
                        .HasMaxLength(12);

                    b.Property<string>("OtherNames")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("CommunicationId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("AgendaWeb.Models.ResourcePlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("ResourcePlans");
                });

            modelBuilder.Entity("AgendaWeb.Models.ResourcePlanProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ResourcePlanId");

                    b.Property<int>("ResourceProfileId");

                    b.HasKey("Id");

                    b.HasIndex("ResourcePlanId");

                    b.HasIndex("ResourceProfileId");

                    b.ToTable("ResourcePlanProfiles");
                });

            modelBuilder.Entity("AgendaWeb.Models.ResourceProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("ResourceProfiles");
                });

            modelBuilder.Entity("AgendaWeb.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<bool>("Enabled");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<int>("SpecialityId");

                    b.Property<int>("StyleId");

                    b.HasKey("Id");

                    b.HasIndex("SpecialityId");

                    b.HasIndex("StyleId");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("AgendaWeb.Models.Speciality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Speciality");
                });

            modelBuilder.Entity("AgendaWeb.Models.Style", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BackgroundColor")
                        .IsRequired();

                    b.Property<bool>("CustomStyle");

                    b.Property<string>("FontColor")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Styles");
                });

            modelBuilder.Entity("AgendaWeb.Models.Collaborator", b =>
                {
                    b.HasOne("AgendaWeb.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AgendaWeb.Models.Communication", "Communication")
                        .WithMany()
                        .HasForeignKey("CommunicationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AgendaWeb.Models.Patient", b =>
                {
                    b.HasOne("AgendaWeb.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AgendaWeb.Models.Communication", "Communication")
                        .WithMany()
                        .HasForeignKey("CommunicationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AgendaWeb.Models.ResourcePlanProfile", b =>
                {
                    b.HasOne("AgendaWeb.Models.ResourcePlan", "ResourcePlan")
                        .WithMany("PlanProfiles")
                        .HasForeignKey("ResourcePlanId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AgendaWeb.Models.ResourceProfile", "ResourceProfile")
                        .WithMany("PlanProfiles")
                        .HasForeignKey("ResourceProfileId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AgendaWeb.Models.Service", b =>
                {
                    b.HasOne("AgendaWeb.Models.Speciality", "Speciality")
                        .WithMany("Services")
                        .HasForeignKey("SpecialityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AgendaWeb.Models.Style", "Style")
                        .WithMany("Services")
                        .HasForeignKey("StyleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
